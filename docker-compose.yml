version: '3.2'

services:
  db:
    image: mysql:5.7
    env_file:
      - ./environments/dev.txt
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  redis:
      image: redis:7.0.6
      platform: linux/amd64
      ports:
        - "6379:6379"
      volumes:
        - "redis:/data"
      healthcheck:
        test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  app:
    build:
      context: .
    image: app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./environments/dev.txt
    ports:
      - 5000:5000
    volumes:
      - .:/opt/app:delegated
  celery_worker:
    build:
      context: "."
    image: app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./environments/dev.txt
    volumes:
      - .:/opt/app:delegated
    command: >
      celery -A app.make_celery worker --loglevel "${CELERY_LOG_LEVEL:-INFO}"

  celery-beat:
    build:
      context: "."
    image: app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./environments/dev.txt
    volumes:
      - .:/opt/app:delegated
    command: celery -A app.make_celery beat --loglevel "${CELERY_LOG_LEVEL:-INFO}"

volumes:
  mysql-data:
  redis: {}
